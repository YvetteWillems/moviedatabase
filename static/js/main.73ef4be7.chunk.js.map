{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/Movie.js","components/Movies.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this","this","react_default","a","createElement","className","id","onClick","props","changeSearch","href","Component","SearchBar","onSubmit","e","preventDefault","onChange","search","type","placeholder","Movie","src","movie","Poster","alt","Title","Year","getDetails","imdbID","Movies","undefined","movies","map","components_Movie","key","Details","Fragment","Type","Genre","imdbRating","Actors","Plot","hideDetails","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchText","target","value","state","searchAll","axios","get","then","res","data","setState","Search","searchMovies","fetch","response","json","selected","searchSeries","document","getElementById","style","fontWeight","components_Header","components_SearchBar","components_Details","components_Movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ef4be7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render(){\r\n    return (\r\n    <nav className=\"navbar-yvette\">\r\n        <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-10\"><div className=\"row\">\r\n                        <div className=\"col-md-auto mt-1\"><a id=\"all-selected\" onClick={() => { this.props.changeSearch(0) }} href=\"#\">Search All</a></div>\r\n                        <div className=\"col-md-auto mt-1\"><a id=\"movies-selected\" onClick={() => { this.props.changeSearch(1) }} href=\"#\">Movies</a></div>\r\n                        <div className=\"col-md-auto mt-1\"><a id=\"series-selected\" onClick={() => { this.props.changeSearch(2) }} href=\"#\">Series</a></div>\r\n                    </div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n  render(){\r\n    return (\r\n        <div className=\"\">\r\n            <h1>Search title:</h1>\r\n            <div id=\"search\" className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-sm-9\">\r\n                                <form onSubmit={this.onSubmit} >\r\n                                    <input \r\n                                        onChange={this.props.search} \r\n                                        id=\"movieSearch\" \r\n                                        className=\"form-control\" \r\n                                        type=\"text\" \r\n                                        placeholder=\"Search for title...\" />\r\n                                </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react'; \r\n\r\nclass Movie extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-3\">\r\n                <div className=\"movies-style text-center\">\r\n                    <div className=\"movie-img\">\r\n                        <img src={this.props.movie.Poster} alt={this.props.movie.Title}></img>\r\n                    </div>\r\n                    <div className=\"movie-text\">\r\n                        <h5>{this.props.movie.Title}</h5>\r\n                        <h5>{this.props.movie.Year}</h5>\r\n                        <button onClick={() => { this.props.getDetails(this.props.movie.imdbID) }} className=\"btn btn-light button-yvette btn-movie\">Movie Details</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport Movie from './Movie'; \r\n\r\nclass Movies extends Component {  \r\n  render(){\r\n    // 1: Check if state movies has value:\r\n    if(this.props.movies === undefined){\r\n      // 2: If not, do nothing:\r\n      return null;\r\n    } else {\r\n      // 2: If state movies has value, show movie results:\r\n      return (\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"row\">\r\n                {this.props.movies.map(movie => (\r\n                  <Movie \r\n                    key={movie.imdbID}\r\n                    movie={movie}  \r\n                    getDetails={this.props.getDetails}         \r\n                  ></Movie>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from 'react'; \r\n\r\nclass Details extends Component {     \r\n    render() {\r\n        // 1: Check if state movie has value:\r\n        if(this.props.movie === null){\r\n            // 2: If not, do nothing:\r\n            return null;\r\n          } else { \r\n            // 2: If state movie has value, show movie details:\r\n            return (\r\n            <React.Fragment>\r\n                <div className=\"movie-details p-3 col-sm-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5\">\r\n                            <div className=\"detail-img\">\r\n                                <img src={this.props.movie.Poster} alt={this.props.movie.Title}></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-7 pt-3\">\r\n                            <h2>{this.props.movie.Title}</h2>\r\n                            <h4>{this.props.movie.Year}</h4>\r\n                            <p>{this.props.movie.Type} ({this.props.movie.Genre})</p>\r\n                            <h4><i className=\"fas fa-star\"></i><strong> {this.props.movie.imdbRating}</strong></h4>\r\n                            <p>Actors: <i>{this.props.movie.Actors}</i></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <p>{this.props.movie.Plot}</p>\r\n                            <button onClick={() => { this.props.hideDetails() }} className=\"btn btn-light button-yvette btn-detail\">Hide Details</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar'; \nimport Movies from './components/Movies'; \nimport Details from './components/Details'; \nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        movies: [],\n        movie: null,\n        searchAll: true, \n        searchMovies: false, \n        searchSeries: false,\n      };\n  }\n\n  search = (e) => {\n    let searchText = e.target.value;\n    let movies = []; \n    // 1: Check if all/movies/series is selected:\n    if(this.state.searchAll === true){\n      axios.get(\"http://www.omdbapi.com/?i=tt3896198&apikey=d67c387a&s=\" + searchText)\n        // 2: Put data in state:\n        .then(res => {\n          const movies = res.data;\n          this.setState({ movies: movies.Search });\n        });\n    } else if(this.state.searchMovies === true) {\n      axios.get(\"http://www.omdbapi.com/?i=tt3896198&apikey=d67c387a&s=\" + searchText + \"&type=movie\")\n        .then(res => {\n          const movies = res.data;\n          this.setState({ movies: movies.Search });\n        });\n    } else {\n      axios.get(\"http://www.omdbapi.com/?i=tt3896198&apikey=d67c387a&s=\" + searchText + \"&type=series\")\n        .then(res => {\n          const movies = res.data;\n          this.setState({ movies: movies.Search });\n        });\n    }\n  }\n\n  getDetails = (imdbID) => {\n    // 1: Get movie details and set in state movie:\n    fetch(\"http://www.omdbapi.com/?apikey=d67c387a&i=\" + imdbID)\n      .then(response => response.json())\n      .then(movie => this.setState({ movie: movie }));\n  }\n\n  hideDetails = () => {\n    // 1: Hide movie details by setting state movie to null:\n    this.setState({ movie: null }); \n  }\n\n  changeSearch = (selected) => {\n    // 1: Change state & style:\n    switch(selected){\n      case 0:\n        this.setState({ searchAll: true, searchMovies: false, searchSeries: false });\n        document.getElementById('all-selected').style.fontWeight = 'bold';\n        document.getElementById('movies-selected').style.fontWeight = 'normal';\n        document.getElementById('series-selected').style.fontWeight = 'normal';\n        break;\n      case 1:\n        this.setState({ searchAll: false, searchMovies: true, searchSeries: false });\n        document.getElementById('all-selected').style.fontWeight = 'normal';\n        document.getElementById('movies-selected').style.fontWeight = 'bold';\n        document.getElementById('series-selected').style.fontWeight = 'normal';\n        break;\n      case 2:\n        this.setState({ searchAll: false, searchMovies: false, searchSeries: true });\n        document.getElementById('all-selected').style.fontWeight = 'normal';\n        document.getElementById('movies-selected').style.fontWeight = 'normal';\n        document.getElementById('series-selected').style.fontWeight = 'bold';\n    }\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <Header changeSearch={this.changeSearch}/>\n        <div className=\"container my-5\">\n          <SearchBar search={this.search} />\n          <div id=\"detail-result\"></div>\n          <Details movie={this.state.movie} hideDetails={this.hideDetails}/>\n          <Movies movies={this.state.movies} getDetails={this.getDetails}/>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}